{"version":3,"sources":["components/Map/index.tsx","pages/homepage/index.tsx","App.js","reportWebVitals.js","index.js"],"names":["Map","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Marker","position","Popup","React","Component","data","name","type","Homepage","className","map","item","App","useState","titles","setTitle","useEffect","fetch","then","res","json","title","x","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2VAKMA,E,4JACJ,WACE,OACE,8BACE,eAACC,EAAA,EAAD,CACEC,OAAQ,CAAC,QAAS,OAClBC,KAAM,GACNC,iBAAiB,EAHnB,UAIE,cAACC,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAEN,cAACC,EAAA,EAAD,CAAQC,SAAU,CAAC,QAAS,KAA5B,SACE,eAACC,EAAA,EAAD,mCACuB,uBADvB,sC,GAbMC,IAAMC,WCGlBC,EAAO,CACX,CACEC,KAAM,8CACNC,KAAM,qCAER,CACED,KAAM,8BACNC,KAAM,iBAER,CACED,KAAM,uCACNC,KAAM,yBAER,CACED,KAAM,8BACNC,KAAM,yBAER,CACED,KAAM,gBACNC,KAAM,gBAER,CACED,KAAM,0BACNC,KAAM,mCAER,CACED,KAAM,0BACNC,KAAM,oDAER,CACED,KAAM,qBACNC,KAAM,gBAER,CACED,KAAM,sBACNC,KAAM,gBAER,CACED,KAAM,oBACNC,KAAM,oDAER,CACED,KAAM,mCACNC,KAAM,iBAER,CACED,KAAM,eACNC,KAAM,kBAIJC,E,4JACJ,WACE,OACE,gCACE,sBAAMC,UAAU,OAAhB,sBACA,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,gBAAf,SAA+B,cAAC,EAAD,MAC9BJ,EAAKK,KAAI,SAACC,GAAD,OACR,sBAAKF,UAAU,OAAf,UACE,qBAAKA,UAAU,OAAf,SAAuBE,EAAKL,OAC5B,qBAAKG,UAAU,OAAf,SAAuBE,EAAKJ,SAFJ,wB,GARfJ,IAAMC,WCvCdQ,MAhBf,WAAgB,IAAD,EACcC,mBAAS,GADvB,mBACNC,EADM,KACEC,EADF,KAQb,OANAZ,IAAMa,WAAU,WACdC,MAAM,KAAKC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAAQF,MAAK,SAACb,GACzCU,EAASV,EAAKgB,OACdC,EAAIjB,OAEL,IAED,sBAAKI,UAAU,MAAf,UACE,oDAAuBK,KACvB,cAAC,EAAD,QCHSS,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAgD,IAA9CQ,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QAC1DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACL,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.167fa659.chunk.js","sourcesContent":["import React from 'react';\r\nimport {MapContainer, TileLayer, Marker, Popup} from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './index.tsx.css';\r\n\r\nclass Map extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MapContainer\r\n          center={[42.353, -71.07]}\r\n          zoom={14}\r\n          scrollWheelZoom={false}>\r\n          <TileLayer\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          <Marker position={[51.505, -0.09]}>\r\n            <Popup>\r\n              A pretty CSS3 popup. <br /> Easily customizable.\r\n            </Popup>\r\n          </Marker>\r\n        </MapContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport {Map};\r\n","import React from 'react';\r\nimport './index.tsx.css';\r\nimport {Map} from 'components/Map';\r\n\r\ninterface Props {\r\n    data?: string\r\n}\r\n\r\nconst data = [\r\n  {\r\n    name: 'Massachusetts Behavioral Health Partnership',\r\n    type: 'Health Care and Social Assistance',\r\n  },\r\n  {\r\n    name: 'United States Monorail Corp',\r\n    type: 'Manufacturing',\r\n  },\r\n  {\r\n    name: 'Massachusetts Professional Licensing',\r\n    type: 'Public Administration',\r\n  },\r\n  {\r\n    name: 'Mass Commonwealth Insurance',\r\n    type: 'Public Administration',\r\n  },\r\n  {\r\n    name: 'E G Leon & Co',\r\n    type: 'Construction',\r\n  },\r\n  {\r\n    name: 'Elephant Walk South End',\r\n    type: 'Accommodation and Food Services',\r\n  },\r\n  {\r\n    name: 'Zeybekoglu & Associates',\r\n    type: 'Professional, Scientific, and Technical Services',\r\n  },\r\n  {\r\n    name: 'Ming\\'s Supermarket',\r\n    type: 'Retail Trade',\r\n  },\r\n  {\r\n    name: 'C Mart of Herald St',\r\n    type: 'Retail Trade',\r\n  },\r\n  {\r\n    name: 'Connelly Partners',\r\n    type: 'Professional, Scientific, and Technical Services',\r\n  },\r\n  {\r\n    name: 'Asian American Civic Association',\r\n    type: 'Manufacturing',\r\n  },\r\n  {\r\n    name: 'Flour Bakery',\r\n    type: 'Manufacturing',\r\n  },\r\n];\r\n\r\nclass Homepage extends React.Component<Props, {}> {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span className=\"span\">Homepage</span>\r\n        <div className=\"block1\">\r\n          <div className=\"map-component\"><Map /></div>\r\n          {data.map((item) =>\r\n            <div className=\"list\" key=\"item.id\">\r\n              <div className=\"name\">{item.name}</div>\r\n              <div className=\"type\">{item.type}</div>\r\n            </div>,\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport {Homepage};\r\n","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {Homepage} from './pages/homepage';\r\n\r\nfunction App() {\r\n  const [titles, setTitle] = useState(0);\r\n  React.useEffect(() => {\r\n    fetch('/').then((res) => res.json()).then((data) => {\r\n      setTitle(data.title);\r\n      x = data;\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <p> BPDA Main Streets {titles}</p>\r\n      <Homepage />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}