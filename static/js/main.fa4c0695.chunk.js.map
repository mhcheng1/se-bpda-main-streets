{"version":3,"sources":["Components/NavigationBar.js","Components/Pages/Developing.js","Components/Map.js","Components/Pages/Hompage.js","Components/MainstreetMap.js","Components/BarGraph.js","Components/Pages/Business.js","Components/Pages/BostonBusiness.js","Components/Pages/Employment.js","Components/SpendingLineGraph.js","Components/TripsLineGraph.js","Components/Pages/Spending.js","App.js","reportWebVitals.js","index.js"],"names":["NavigationBar","busi_link","employ_link","spend_link","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","id","Nav","className","NavDropdown","title","Item","Link","Developing","link1","link2","link3","DistrictBar","Spinner","animation","Map","districtStyle","color","fillColor","fillOpacity","clickable","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","GeoJSON","style","data","boston","streets","features","map","item","FeatureGroup","pathOptions","Popup","properties","NAME","URL","Polygon","positions","geometry","coordinates","lst","coord","Homepage","HomepageBar","MainstreetMap","district_data","map_coor","map_zoom","msdistricts","Marker","position","icon","Icon","iconUrl","markerIconPng","iconSize","name","BarGraph","intv","font","x_axis","y_axis","BarChart","width","height","barGap","layout","barCategoryGap","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","type","YAxis","tick","fontSize","dataKey","interval","Tooltip","Bar","fill","Business","msname","business","React","useState","business_data","setData","industry_graph","setGraph1","employee_graph","setGraph2","stats","setStats","useEffect","fetch","then","response","json","busi_info","employment_graph","geo","catch","error","console","log","BusinessData","BusinessGraph","SizeGraph","BostonBusiness","BarGraph1","BarGraph2","Employment","age_graph","income_graph","gender_graph","setGraph3","race_graph","setGraph4","education_graph","setGraph5","age_distribution","monthly_income","gender","racial_distribution","education_distribution","EmploymentData","IncomeGraph","GenderGraph","RaceGraph","LineGraph","LineChart","label","value","tickFormatter","domain","tickCount","angle","ReferenceLine","y","stroke","Line","parseFloat","toFixed","Spending","in_person_spending_graph","trips_graph","trips","in_person_spending","SpendingGraph","SpendingLineGraph","TripsGraph","TripsLineGraph","App","BostonEmployment","BostonSpending","BrightonB","BrightonE","BrightonS","ChinatownB","ChinatownE","ChinatownS","FourCornersB","FourCornersE","FourCornersS","AllstonVillageB","AllstonVillageE","AllstonVillageS","WashingtonGatewayB","WashingtonGatewayE","WashingtonGatewayS","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa4c0695.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Nav, Container, NavDropdown, Navbar } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction NavigationBar(busi_link, employ_link, spend_link) {\r\n  // Input:  busi_link is the link to the Business page of a Main Street in the form of a string;\r\n  //         employ_link is the link to the Employment page of a Main Street in the form of a string;\r\n  //         spend_link is the link to the Mobility and Spending page of a Main Street in the form of a string\r\n  // Output: A navigation bar that contains links to other Main Streets, and the current Main Street's\r\n  //         Business, Employment, and Mobility and Spending pages\r\n\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <Container>\r\n        <Navbar.Brand href=\"#/\">Homepage</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n            <NavDropdown title=\"Main Streets\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item href=\"#/brighton\">Brighton</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#/chinatown\">Chinatown</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#/washingtongateway\">\r\n                Washington Gateway\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#/fourcorners\">\r\n                Four Corners\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#/allstonvillage\">\r\n                Allston Village\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n            <Nav.Link href={busi_link}>Business</Nav.Link>\r\n            <Nav.Link href={employ_link}>Employment</Nav.Link>\r\n            <Nav.Link href={spend_link}>Mobility and Spending</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\nexport default NavigationBar;\r\n","import React from \"react\";\r\nimport \"./Developing.css\";\r\nimport { Container, Spinner } from \"react-bootstrap\";\r\nimport NavigationBar from \"../NavigationBar\";\r\n\r\nfunction Developing(link1, link2, link3) {\r\n  // Input:  link 1, 2, 3: links to the other pages of the app in a string\r\n  // Output: Navigation bar with links to the other pages in the app;\r\n  //         A spinning wheel animation to indicate work that is in progress\r\n\r\n  const DistrictBar = () => {\r\n    return NavigationBar(link1, link2, link3);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <DistrictBar />\r\n      </Container>\r\n      <div className=\"Title\">\r\n        <h2>\r\n          Unfortunately there is no data for this page. Until more data is\r\n          added, please view the other pages of the various main streets.\r\n        </h2>\r\n      </div>\r\n      <div className=\"Loading\">\r\n        <Spinner animation=\"border\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Developing;\r\n","import React from \"react\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport {\r\n  MapContainer,\r\n  TileLayer,\r\n  GeoJSON,\r\n  FeatureGroup,\r\n  Popup,\r\n  Polygon,\r\n} from \"react-leaflet\";\r\nimport streets from \"./GeoJSON/Main_Street_Districts.json\";\r\nimport boston from \"./GeoJSON/Boston_Boundary.json\";\r\nimport \"./Map.css\";\r\n\r\nfunction Map() {\r\n  // Input:  None;\r\n  // Output: A map of Greater Boston outlined in black\r\n\r\n  const districtStyle = {\r\n    color: \"red\",\r\n    fillColor: \"red\",\r\n    fillOpacity: 0.5,\r\n    clickable: true,\r\n  };\r\n\r\n  const bostonStyle = {\r\n    color: \"black\",\r\n    fillOpacity: 0,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MapContainer\r\n        center={[42.315, -71.09]}\r\n        zoom={11.5}\r\n        scrollWheelZoom={false}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        <GeoJSON style={bostonStyle} data={boston} />\r\n        {streets.features.map((item) => (\r\n          <FeatureGroup pathOptions={districtStyle}>\r\n            <Popup>\r\n              Mainstreet: {item.properties.NAME} <br />{\" \"}\r\n              <a href={item.properties.URL}>Click for more info</a>\r\n            </Popup>\r\n            <Polygon\r\n              positions={item.geometry.coordinates.map((lst) =>\r\n                lst.map((coord) => [coord[1], coord[0]])\r\n              )}\r\n            />\r\n          </FeatureGroup>\r\n        ))}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport \"./Homepage.css\";\r\nimport Map from \"../Map\";\r\nimport NavigationBar from \"../NavigationBar\";\r\n\r\nfunction Homepage() {\r\n  // Input:  None;\r\n  // Output: Navigation bar with links to the other pages in the app;\r\n  //         Map of Greater Boston Area with outlines of all the Main Streets;\r\n  //         Text of BPDA's mission and purpose\r\n\r\n  const HomepageBar = () => {\r\n    return NavigationBar(\"#/business\", \"#/employment\", \"#/spending\");\r\n  };\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <HomepageBar />\r\n      </Container>\r\n      <div className=\"homepage-block\">\r\n        <div className=\"homepage-map\">\r\n          <Map />\r\n        </div>\r\n        <div className=\"homepage-generalinfo\">\r\n          <p>\r\n            <strong> Boston Main Street District Viewer </strong> is a project\r\n            from the BPDA Research Division and Boston University Spark. This\r\n            interactive map combines public data and anonymized data from\r\n            private companies to visualize the characteristics of Boston Main\r\n            Street Districts and the impact of COVID-19 pandemic on the economic\r\n            prospects of businesses and people in each district. Click the map\r\n            and explore the Main Street Districts that bring our city to life.\r\n          </p>\r\n          <p>\r\n            This is part of broader initiative to understand the current\r\n            environment in Boston. More research produced by the Boston Planning\r\n            and Development Agency can be found on the BPDA Research Website:{\" \"}\r\n            <a href=\"http://www.bostonplans.org/research\">\r\n              <strong> www.bostonplans.org/research</strong>\r\n            </a>\r\n          </p>\r\n          <p>\r\n            <strong>Source: </strong> Mastercard Geographic Insights; Cuebiq\r\n            Mobility Data*; U.S. Census Bureau. LEHD Origin-Destination\r\n            Employment Statistics 2018, OntheMap; Data Axle; Yelp; Google;\r\n            Yellow Pages; Bing\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport markerIconPng from \"leaflet/dist/images/marker-icon.png\";\r\nimport { Icon } from \"leaflet\";\r\nimport { MapContainer, TileLayer, GeoJSON, Marker, Popup } from \"react-leaflet\";\r\nimport msdistricts from \"./GeoJSON/Main_Street_Districts.json\";\r\nimport \"./Map.css\";\r\n\r\nfunction MainstreetMap(district_data, map_coor, map_zoom) {\r\n  // Input:  district_data is a geojson formatted data that creates the markers of the map;\r\n  //         map_coor is list of coordinates for where the map will be positioned;\r\n  //         map_zoom is an int that will be used to zoom into the map\r\n  // Output: A map of a Main Street with pinpoints that represent the location of a business\r\n\r\n  const districtStyle = {\r\n    color: \"red\",\r\n    fillColor: \"red\",\r\n    fillOpacity: 0.4,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MapContainer center={map_coor} zoom={map_zoom} scrollWheelZoom={false}>\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        <GeoJSON style={districtStyle} data={msdistricts} />\r\n        {district_data.map((item) => (\r\n          <Marker\r\n            position={item.geometry.coordinates}\r\n            icon={new Icon({ iconUrl: markerIconPng, iconSize: [15, 30] })}\r\n          >\r\n            <Popup>\r\n              {\" \"}\r\n              This is the business: <b>{item.properties.name}</b>\r\n            </Popup>\r\n          </Marker>\r\n        ))}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainstreetMap;\r\n","import React from \"react\";\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip } from \"recharts\";\r\n\r\nfunction BarGraph(data, intv, font, x_axis, y_axis) {\r\n  // Input:  data is a Python dictionary that contains information about a Main Street;\r\n  //         intv is an int that limits the number of ticks shown in an axis;\r\n  //         font is an int that will be used to set the font size of a label;\r\n  //         x_axis is a key to the data dictionary that will give the x values for the graph;\r\n  //         y_axis is a key to the data dictionary that will give the y values for the graph\r\n  // Output: A bar graph that visualizes the information given in the data dictionary\r\n\r\n  return (\r\n    <BarChart\r\n      width={600}\r\n      height={200}\r\n      data={data}\r\n      barGap={2}\r\n      layout=\"vertical\"\r\n      barCategoryGap=\"20%\"\r\n      margin={{\r\n        top: 5,\r\n        right: 30,\r\n        left: 20,\r\n        bottom: 5,\r\n      }}\r\n    >\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <XAxis type=\"number\" />\r\n      <YAxis\r\n        type=\"category\"\r\n        tick={{ fontSize: font }}\r\n        width={300}\r\n        dataKey={y_axis}\r\n        interval={intv}\r\n      />\r\n      <Tooltip />\r\n      <Bar dataKey={x_axis} fill=\"blue\" />\r\n    </BarChart>\r\n  );\r\n}\r\nexport default BarGraph;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport MainstreetMap from \"../MainstreetMap\";\r\nimport NavigationBar from \"../NavigationBar\";\r\nimport BarGraph from \"../BarGraph\";\r\nimport \"./Business.css\";\r\n\r\nfunction BusinessData(url, coordinates, zoom) {\r\n  // Input:  url is the link to the Flask API in a string;\r\n  //         coordinates is a list of decimals that outlines the Main Street;\r\n  //         zoom contains int values that will be used to zoom into the leaflet map\r\n  // Output: Python dictionary containing the map coordinates, zoom values, and business\r\n  //         data on industries and employees for the current Main Street\r\n\r\n  const [business_data, setData] = React.useState([]);\r\n  const [industry_graph, setGraph1] = React.useState([]);\r\n  const [employee_graph, setGraph2] = React.useState([]);\r\n  const [stats, setStats] = React.useState([]);\r\n  React.useEffect(() => {\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setStats(data.busi_info);\r\n        setGraph2(data.employment_graph.data);\r\n        setData(data.geo.features);\r\n        setGraph1(data.industry_graph.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, {});\r\n\r\n  return [\r\n    MainstreetMap(business_data, coordinates, zoom),\r\n    industry_graph,\r\n    employee_graph,\r\n    stats,\r\n  ];\r\n}\r\n\r\nfunction Business(url, msname, coordinates, zoom, link1, link2, link3) {\r\n  // Input:  url is the link to the Flask API in a string;\r\n  //         msname is a string of the Main Street that will be used to query data from the database;\r\n  //         coordinates is a list of decimals that outlines the Main Street;\r\n  //         zoom contains int values that will be used to zoom into the leaflet map;\r\n  //         link 1, 2, 3: links to the other pages of the app in a string\r\n  // Output: Navigation bar with links to the other pages in the app;\r\n  //         Map of the current Main Street;\r\n  //         Text containing information about the number of employees and industries for the current Main Street;\r\n  //         Two bar graphs that show the distribution of businesses and industries for the current Main Street;\r\n\r\n  const DistrictBar = () => {\r\n    return NavigationBar(link1, link2, link3);\r\n  };\r\n  const business = BusinessData(url, coordinates, zoom);\r\n  const BusinessGraph = () => {\r\n    return BarGraph(business[1], 1, 7, \"number_of_businesses\", \"industry\");\r\n  };\r\n  const SizeGraph = () => {\r\n    return BarGraph(business[2], 1, 7, \"number_of_employees\", \"industry\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <DistrictBar />\r\n      </Container>\r\n      <div>\r\n        <div className=\"business-title\">\r\n          <h2>{msname} Business Data</h2>\r\n        </div>\r\n      </div>\r\n      <div className=\"business-box\">\r\n        <div className=\"business-map\"> {business[0]} </div>\r\n        <div className=\"business-generalinfo\">\r\n          <p>\r\n            Total number of businesses: <strong> {business[3][0]} </strong>\r\n          </p>\r\n          <p>\r\n            Estimated number of employees: <strong> {business[3][1]} </strong>\r\n          </p>\r\n          <p>\r\n            Average employment size: <strong> {business[3][2]} </strong>\r\n          </p>\r\n          <div className=\"business-graph1title\">\r\n            <h6>Industrial Distribution of Businesses in {msname}</h6>\r\n            <div className=\"business-graph1\">\r\n              <BusinessGraph />\r\n            </div>\r\n          </div>\r\n          <div className=\"business-graph2title\">\r\n            <h6>\r\n              Number of Businesses in {msname} Main Street Districts by Size\r\n            </h6>\r\n            <div className=\"business-graph2\">\r\n              <SizeGraph />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Business;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Map from \"../Map\";\r\nimport NavigationBar from \"../NavigationBar\";\r\nimport BarGraph from \"../BarGraph\";\r\nimport \"./Business.css\";\r\n\r\nfunction BusinessData() {\r\n  // Input:  None\r\n  // Output: Python dictionary containing business data on all the industries and employees\r\n  //         from all the Main Streets\r\n\r\n  const [industry_graph, setGraph1] = React.useState([]);\r\n  const [employee_graph, setGraph2] = React.useState([]);\r\n  const [stats, setStats] = React.useState([]);\r\n  React.useEffect(() => {\r\n    fetch(\"https://se-bpda.buspark.io/\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setStats(data.busi_info);\r\n        setGraph2(data.employment_graph.data);\r\n        setGraph1(data.industry_graph.data);\r\n        console.log(data.busi_info);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, {});\r\n\r\n  return [industry_graph, employee_graph, stats];\r\n}\r\n\r\nfunction BostonBusiness() {\r\n  // Input:  None\r\n  // Output: Navigation bar with links to the other pages in the app;\r\n  //         Map of Greater Boston and outlines of the Main Streets;\r\n  //         Text containing information about the number of employees and industries for all the Main Streets;\r\n  //         Two bar graphs that show the distribution of businesses and industries for all the current Main Streets\r\n\r\n  const DistrictBar = () => {\r\n    return NavigationBar(\"#/business\", \"#/employment\", \"#/spending\");\r\n  };\r\n  const business = BusinessData();\r\n  const BarGraph1 = () => {\r\n    return BarGraph(business[0], 1, 7, \"number_of_businesses\", \"industry\");\r\n  };\r\n  const BarGraph2 = () => {\r\n    return BarGraph(business[1], 1, 7, \"number_of_employees\", \"industry\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <DistrictBar />\r\n      </Container>\r\n      <div>\r\n        <div className=\"business-title\">\r\n          <h2>All Main Street Data</h2>\r\n        </div>\r\n      </div>\r\n      <div className=\"business-box\">\r\n        <div className=\"business-map\">\r\n          <Map />\r\n        </div>\r\n        <div className=\"business-generalinfo\">\r\n          <p>\r\n            Total number of businesses: <b> {business[2][0]} </b>{\" \"}\r\n          </p>\r\n          <p>\r\n            Estimated number of employees: <b> {business[2][1]} </b>\r\n          </p>\r\n          <p>\r\n            Average employment size: <b> {business[2][2]} </b>\r\n          </p>\r\n          <div className=\"business-graph1title\">\r\n            <h6>Industrial Distribution of Businesses in all Main Streets</h6>\r\n            <div className=\"business-graph1\">\r\n              <BarGraph1 />\r\n            </div>\r\n          </div>\r\n          <div className=\"business-graph2title\">\r\n            <h6>Number of Businesses in all Main Street Districts by Size</h6>\r\n            <div className=\"business-graph2\">\r\n              <BarGraph2 />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BostonBusiness;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport NavigationBar from \"../NavigationBar\";\r\nimport BarGraph from \"../BarGraph\";\r\nimport MainstreetMap from \"../MainstreetMap\";\r\nimport \"./Employment.css\";\r\n\r\nfunction EmploymentData(url, coordinates, zoom) {\r\n  // Input:  url is the link to the Flask API in a string;\r\n  //         coordinates is a list of decimals that outlines the Main Street;\r\n  //         zoom contains int values that will be used to zoom into the leaflet map\r\n  // Output: Python dictionary containing the map coordinates, zoom values, and demographic\r\n  //         data on age, income, gender, race, and education for the current Main Street\r\n\r\n  const [business_data, setData] = React.useState([]);\r\n  const [age_graph, setGraph1] = React.useState([]);\r\n  const [income_graph, setGraph2] = React.useState([]);\r\n  const [gender_graph, setGraph3] = React.useState([]);\r\n  const [race_graph, setGraph4] = React.useState([]);\r\n  const [education_graph, setGraph5] = React.useState([]);\r\n  React.useEffect(() => {\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setData(data.geo.features);\r\n        setGraph1(data.age_distribution);\r\n        setGraph2(data.monthly_income);\r\n        setGraph3(data.gender);\r\n        setGraph4(data.racial_distribution);\r\n        setGraph5(data.education_distribution);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, {});\r\n\r\n  return [\r\n    MainstreetMap(business_data, coordinates, zoom),\r\n    age_graph,\r\n    income_graph,\r\n    gender_graph,\r\n    race_graph,\r\n    education_graph,\r\n  ];\r\n}\r\n\r\nfunction Employment(url, msname, coordinates, zoom, link1, link2, link3) {\r\n  // Input:  url is the link to the Flask API in a string;\r\n  //         msname is a string of the Main Street that will be used to query data from the database;\r\n  //         coordinates is a list of decimals that outlines the Main Street;\r\n  //         zoom contains int values that will be used to zoom into the leaflet map;\r\n  //         link 1, 2, 3: links to the other pages of the app in a string\r\n  // Output: Navigation bar with links to the other pages in the app;\r\n  //         Map of the current Main Street;\r\n  //         Three bar graphs that visualize the monthly income, and gender and race distributions for the current Main Street\r\n\r\n  const DistrictBar = () => {\r\n    return NavigationBar(link1, link2, link3);\r\n  };\r\n  const business = EmploymentData(url, coordinates, zoom);\r\n  /* const AgeGraph = () => {\r\n    return BarGraph(business[1], 0, 15, \"Count\", \"Age\");\r\n  }; */\r\n  const IncomeGraph = () => {\r\n    return BarGraph(business[2], 0, 15, \"Count\", \"Income\");\r\n  };\r\n  const GenderGraph = () => {\r\n    return BarGraph(business[3], 0, 15, \"Count\", \"Gender\");\r\n  };\r\n  const RaceGraph = () => {\r\n    return BarGraph(business[4], 0, 15, \"Count\", \"Race\");\r\n  };\r\n  /*  const EducationGraph = () => {\r\n    return BarGraph(business[5], 0, 15, \"Count\", \"Education\");\r\n  }; */\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <DistrictBar />\r\n      </Container>\r\n      <div>\r\n        <div className=\"employment-title\">\r\n          <h2>{msname} Employment Data</h2>\r\n        </div>\r\n      </div>\r\n      <div className=\"employment-box\">\r\n        <div className=\"employment-map\"> {business[0]} </div>\r\n        <div className=\"employment-graphs\">\r\n          <div className=\"employment-graph1-title\">\r\n            <h6> Monthly Income for {msname} Employees</h6>\r\n            <div className=\"employmnent-graph1\">\r\n              <IncomeGraph />\r\n            </div>\r\n          </div>\r\n          <div className=\"employment-graph2-title\">\r\n            <h6> Gender Distribution in {msname}</h6>\r\n            <div className=\"employment-graph2\">\r\n              <GenderGraph />\r\n            </div>\r\n          </div>\r\n          <div className=\"employment-graph3-title\">\r\n            <h6> Race Distribution in {msname}</h6>\r\n            <div className=\"employment-graph3\">\r\n              <RaceGraph />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Employment;\r\n","import React from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ReferenceLine,\r\n} from \"recharts\";\r\n\r\nfunction LineGraph(data, x_axis, y_axis) {\r\n  // Input:  data is a Python dictionary that contains information on the spending distribution of a Main Street;\r\n  //         x_axis is a key to the data dictionary that will give the x values for the graph;\r\n  //         y_axis is a key to the data dictionary that will give the y values for the graph;\r\n  // Output: A line graph that visualizes the distribution of spending over a set of time\r\n\r\n  return (\r\n    <LineChart\r\n      width={700}\r\n      height={300}\r\n      data={data}\r\n      margin={{\r\n        top: 5,\r\n        right: 30,\r\n        left: 20,\r\n        bottom: 20,\r\n      }}\r\n    >\r\n      {/* tickCount={20} */}\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <XAxis\r\n        type=\"category\"\r\n        dataKey={x_axis}\r\n        interval={10}\r\n        label={{ value: \"Dates\", position: \"bottom\" }}\r\n      />\r\n      <YAxis\r\n        type=\"number\"\r\n        tickFormatter={(tick) => `${tick}%`}\r\n        domain={[-70, \"dataMax\"]}\r\n        tickCount={30}\r\n        label={{ value: \"Spending\", position: \"left\", angle: -90 }}\r\n      />\r\n      <ReferenceLine y={0} stroke=\"black\" />\r\n      <Tooltip />\r\n      <Line dataKey={y_axis} stroke=\"#82ca9d\" />\r\n    </LineChart>\r\n  );\r\n}\r\nexport default LineGraph;\r\n","import React from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n} from \"recharts\";\r\n\r\nfunction LineGraph(data, x_axis, y_axis) {\r\n  // Input:  data is a Python dictionary that contains information on the trips distribution of a Main Street;\r\n  //         x_axis is a key to the data dictionary that will give the x values for the graph;\r\n  //         y_axis is a key to the data dictionary that will give the y values for the graph;\r\n  // Output: A line graph that visualizes the distribution of trips over a set of time\r\n\r\n  return (\r\n    <LineChart\r\n      width={700}\r\n      height={300}\r\n      data={data}\r\n      margin={{\r\n        top: 5,\r\n        right: 30,\r\n        left: 20,\r\n        bottom: 20,\r\n      }}\r\n    >\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <XAxis\r\n        type=\"category\"\r\n        dataKey={x_axis}\r\n        interval={10}\r\n        label={{ value: \"Dates\", position: \"bottom\" }}\r\n      />\r\n      <YAxis\r\n        type=\"number\"\r\n        tickFormatter={(value) => parseFloat(value).toFixed(0)}\r\n        domain={[\"dataMin\", \"dataMax\"]}\r\n        tickCount={10}\r\n        label={{ value: \"Trips\", position: \"left\", angle: -90 }}\r\n      />\r\n      <Tooltip />\r\n      <Line dataKey={y_axis} stroke=\"#82ca9d\" />\r\n    </LineChart>\r\n  );\r\n}\r\nexport default LineGraph;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport MainstreetMap from \"../MainstreetMap\";\r\nimport NavigationBar from \"../NavigationBar\";\r\nimport SpendingLineGraph from \"../SpendingLineGraph\";\r\nimport TripsLineGraph from \"../TripsLineGraph\";\r\nimport \"./Spending.css\";\r\n\r\nfunction BusinessData(url, coordinates, zoom) {\r\n  // Input:  url is the link to the Flask API in a string;\r\n  //         coordinates is a list of decimals that outlines the Main Street;\r\n  //         zoom contains int values that will be used to zoom into the leaflet map\r\n  // Output: Python dictionary containing the map coordinates, zoom values, and business\r\n  //         data on spending and trips for the current Main Street\r\n\r\n  const [business_data, setData] = React.useState([]);\r\n  const [in_person_spending_graph, setGraph1] = React.useState([]);\r\n  const [trips_graph, setGraph2] = React.useState([]);\r\n  React.useEffect(() => {\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setGraph2(data.trips);\r\n        setData(data.geo.features);\r\n        setGraph1(data.in_person_spending);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, {});\r\n\r\n  return [\r\n    MainstreetMap(business_data, coordinates, zoom),\r\n    in_person_spending_graph,\r\n    trips_graph,\r\n  ];\r\n}\r\n\r\nfunction Spending(url, msname, coordinates, zoom, link1, link2, link3) {\r\n  // Input:  url is the link to the Flask API in a string;\r\n  //         msname is a string of the Main Street that will be used to query data from the database;\r\n  //         coordinates is a list of decimals that outlines the Main Street;\r\n  //         zoom contains int values that will be used to zoom into the leaflet map;\r\n  //         link 1, 2, 3: links to the other pages of the app in a string\r\n  // Output: Navigation bar with links to the other pages in the app;\r\n  //         Map of the current Main Street;\r\n  //         Two line graphs that visualize the trips and spending distribution for the current Main Street\r\n\r\n  const DistrictBar = () => {\r\n    return NavigationBar(link1, link2, link3);\r\n  };\r\n  const business = BusinessData(url, coordinates, zoom);\r\n  const SpendingGraph = () => {\r\n    return SpendingLineGraph(business[1], \"date\", \"share\");\r\n  };\r\n  const TripsGraph = () => {\r\n    return TripsLineGraph(business[2], \"date\", \"trips\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <DistrictBar />\r\n      </Container>\r\n      <div>\r\n        <div className=\"spending-title\">\r\n          <h2>{msname} Spending and Moblity Data</h2>\r\n        </div>\r\n      </div>\r\n      <div className=\"spending-box\">\r\n        <div className=\"spending-map\"> {business[0]} </div>\r\n        <div className=\"spending-graphs\">\r\n          <div className=\"spending-linegraph1-title\">\r\n            <h4>Spending Distribution in {msname}</h4>\r\n            <div className=\"spending-linegraph1\">\r\n              <SpendingGraph />\r\n            </div>\r\n          </div>\r\n          <div className=\"spending-linegraph2-title\">\r\n            <h4>Trip Distribution in {msname}</h4>\r\n            <div className=\"spending-linegraph2\">\r\n              <TripsGraph />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spending;\r\n","import { HashRouter, Routes, Route } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport Developing from \"./Components/Pages/Developing\";\r\nimport Homepage from \"./Components/Pages/Hompage\";\r\nimport Business from \"./Components/Pages/Business\";\r\nimport BostonBusiness from \"./Components/Pages/BostonBusiness\";\r\nimport Employment from \"./Components/Pages/Employment\";\r\nimport Spending from \"./Components/Pages/Spending\";\r\n\r\nfunction App() {\r\n  // Input:  None\r\n  // Output: Routes to all the different pages in the app\r\n  // Description: The routes are being manually set with HashRouter\r\n\r\n  const BostonEmployment = () => {\r\n    return Developing(\"#/business\", \"#/employment\", \"#/spending\");\r\n  };\r\n  const BostonSpending = () => {\r\n    return Developing(\"#/business\", \"#/employment\", \"#/spending\");\r\n  };\r\n  const BrightonB = () => {\r\n    return Business(\r\n      \"https://se-bpda.buspark.io/brighton\",\r\n      \"Brighton\",\r\n      [42.35, -71.16],\r\n      15,\r\n      \"#/brighton\",\r\n      \"#/brighton/employment\",\r\n      \"#/brighton/spending\"\r\n    );\r\n  };\r\n  const BrightonE = () => {\r\n    return Developing(\r\n      \"#/brighton\",\r\n      \"#/brighton/employment\",\r\n      \"#/brighton/spending\"\r\n    );\r\n  };\r\n  const BrightonS = () => {\r\n    return Developing(\r\n      \"#/brighton\",\r\n      \"#/brighton/employment\",\r\n      \"#/brighton/spending\"\r\n    );\r\n  };\r\n  const ChinatownB = () => {\r\n    return Business(\r\n      \"https://se-bpda.buspark.io/chinatown\",\r\n      \"Chinatown\",\r\n      [42.3515, -71.061],\r\n      17,\r\n      \"#/chinatown\",\r\n      \"#/chinatown/employment\",\r\n      \"#/chinatown/spending\"\r\n    );\r\n  };\r\n  const ChinatownE = () => {\r\n    return Developing(\r\n      \"#/chinatown\",\r\n      \"#/chinatown/employment\",\r\n      \"#/chinatown/spending\"\r\n    );\r\n  };\r\n  const ChinatownS = () => {\r\n    return Developing(\r\n      \"#/chinatown\",\r\n      \"#/chinatown/employment\",\r\n      \"#/chinatown/spending\"\r\n    );\r\n  };\r\n  const FourCornersB = () => {\r\n    return Business(\r\n      \"https://se-bpda.buspark.io/fourcorners\",\r\n      \"Four Corners\",\r\n      [42.301, -71.0779],\r\n      15.5,\r\n      \"#/fourcorners\",\r\n      \"#/fourcorners/employment\",\r\n      \"#/fourcorners/spending\"\r\n    );\r\n  };\r\n  const FourCornersE = () => {\r\n    return Developing(\r\n      \"#/fourcorners\",\r\n      \"#/fourcorners/employment\",\r\n      \"#/fourcorners/spending\"\r\n    );\r\n  };\r\n  const FourCornersS = () => {\r\n    return Developing(\r\n      \"#/fourcorners\",\r\n      \"#/fourcorners/employment\",\r\n      \"#/fourcorners/spending\"\r\n    );\r\n  };\r\n  const AllstonVillageB = () => {\r\n    return Business(\r\n      \"https://se-bpda.buspark.io/allstonvillage\",\r\n      \"Allston Village\",\r\n      [42.353, -71.134],\r\n      15.5,\r\n      \"#/allstonvillage\",\r\n      \"#/allstonvillage/employment\",\r\n      \"#/allstonvillage/spending\"\r\n    );\r\n  };\r\n  const AllstonVillageE = () => {\r\n    return Developing(\r\n      \"#/allstonvillage\",\r\n      \"#/allstonvillage/employment\",\r\n      \"#/allstonvillage/spending\"\r\n    );\r\n  };\r\n  const AllstonVillageS = () => {\r\n    return Developing(\r\n      \"#/allstonvillage\",\r\n      \"#/allstonvillage/employment\",\r\n      \"#/allstonvillage/spending\"\r\n    );\r\n  };\r\n  const WashingtonGatewayB = () => {\r\n    return Business(\r\n      \"https://se-bpda.buspark.io/washingtongateway\",\r\n      \"Washington Gateway\",\r\n      [42.34, -71.07],\r\n      15,\r\n      \"#/washingtongateway\",\r\n      \"#/washingtongateway/employment\",\r\n      \"#/washingtongateway/spending\"\r\n    );\r\n  };\r\n  const WashingtonGatewayE = () => {\r\n    return Employment(\r\n      \"https://se-bpda.buspark.io/washingtongateway/employment\",\r\n      \"Washington Gateway\",\r\n      [42.34, -71.07],\r\n      15,\r\n      \"#/washingtongateway\",\r\n      \"#/washingtongateway/employment\",\r\n      \"#/washingtongateway/spending\"\r\n    );\r\n  };\r\n  const WashingtonGatewayS = () => {\r\n    return Spending(\r\n      \"https://se-bpda.buspark.io/washingtongateway/spending\",\r\n      \"Washington Gateway\",\r\n      [42.34, -71.07],\r\n      15,\r\n      \"#/washingtongateway\",\r\n      \"#/washingtongateway/employment\",\r\n      \"#/washingtongateway/spending\"\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <HashRouter>\r\n        <div className=\"App\">\r\n          <br />\r\n          <Routes>\r\n            <Route path=\"/\" element={<Homepage />} />\r\n            <Route path=\"/business\" element={<BostonBusiness />} />\r\n            <Route path=\"/employment\" element={<BostonEmployment />} />\r\n            <Route path=\"/spending\" element={<BostonSpending />} />\r\n\r\n            <Route path=\"/brighton\" element={<BrightonB />} />\r\n            <Route path=\"/brighton/employment\" element={<BrightonE />} />\r\n            <Route path=\"/brighton/spending\" element={<BrightonS />} />\r\n\r\n            <Route path=\"/chinatown\" element={<ChinatownB />} />\r\n            <Route path=\"/chinatown/employment\" element={<ChinatownE />} />\r\n            <Route path=\"/chinatown/spending\" element={<ChinatownS />} />\r\n\r\n            <Route path=\"/fourcorners\" element={<FourCornersB />} />\r\n            <Route path=\"/fourcorners/employment\" element={<FourCornersE />} />\r\n            <Route path=\"/fourcorners/spending\" element={<FourCornersS />} />\r\n\r\n            <Route path=\"/allstonvillage\" element={<AllstonVillageB />} />\r\n            <Route\r\n              path=\"/allstonvillage/employment\"\r\n              element={<AllstonVillageE />}\r\n            />\r\n            <Route\r\n              path=\"/allstonvillage/spending\"\r\n              element={<AllstonVillageS />}\r\n            />\r\n\r\n            <Route path=\"/washingtongateway\" element={<WashingtonGatewayB />} />\r\n            <Route\r\n              path=\"/washingtongateway/employment\"\r\n              element={<WashingtonGatewayE />}\r\n            />\r\n            <Route\r\n              path=\"/washingtongateway/spending\"\r\n              element={<WashingtonGatewayS />}\r\n            />\r\n          </Routes>\r\n        </div>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}