{"version":3,"sources":["Components/Map.js","Components/HPNavbar.js","Components/Pages/Hompage.js","Components/MainstreetMap.js","Components/MSNavbar.js","Components/Pages/Brighton.js","Components/Pages/Chinatown.js","App.js","reportWebVitals.js","index.js"],"names":["Map","districtStyle","color","fillColor","fillOpacity","clickable","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","GeoJSON","style","data","boston","streets","features","map","item","FeatureGroup","pathOptions","Popup","properties","NAME","href","URL","Polygon","positions","geometry","coordinates","lst","coord","NavigationBar","Navbar","bg","expand","Container","Toggle","aria-controls","Collapse","id","Nav","className","NavDropdown","title","Item","Homepage","MainstreetMap","district_data","map_coor","map_zoom","msdistricts","Marker","position","icon","Icon","iconUrl","markerIconPng","iconSize","name","busi_link","employ_link","spend_link","Brand","Link","msname","Brighton","DistrictBar","business","React","useState","business_data","setData","industry_graph","setGraph1","useEffect","fetch","then","response","json","geo","catch","error","console","log","BusinessData","BarChart","width","height","barGap","layout","barCategoryGap","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","type","YAxis","tick","fontSize","dataKey","Tooltip","Bar","fill","Chinatown","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9460007.chunk.js","sourcesContent":["import React from 'react';\nimport 'leaflet/dist/leaflet.css';\nimport {MapContainer, TileLayer, GeoJSON, FeatureGroup, Popup, Polygon} from 'react-leaflet';\nimport streets from './Main_Street_Districts.json';\nimport boston from './Boston_Boundary.json'\nimport './Map.css'\n\nfunction Map() {\n\n  const districtStyle = {\n    color: \"red\",\n    fillColor: \"red\",\n    fillOpacity: .5,\n    clickable: true,\n  }\n\n  const bostonStyle = {\n    color: \"black\",\n    fillOpacity: 0,\n  }\n\n  return (\n    <div>\n      <MapContainer\n        center={[42.315, -71.09]}\n        zoom={11.5}\n        scrollWheelZoom={false}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <GeoJSON style={bostonStyle} data={boston} />\n        {streets.features.map((item) => \n          <FeatureGroup pathOptions={districtStyle}>\n          <Popup>Mainstreet: {item.properties.NAME} <br/> <a href={item.properties.URL} >Click for more info</a></Popup>\n            <Polygon positions={item.geometry.coordinates.map(lst => lst.map(coord => [coord[1], coord[0]]))} />\n          </FeatureGroup>\n          )}\n      </MapContainer>\n    </div>\n  );\n}\n\nexport default Map;","import React from 'react';\nimport {Nav, Container, NavDropdown, Navbar} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction NavigationBar() {\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n    <Container>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"me-auto\">\n        <NavDropdown title=\"Mainstreets\" id=\"basic-nav-dropdown\">\n            <NavDropdown.Item href=\"/brighton\">Brighton</NavDropdown.Item>\n            <NavDropdown.Item href=\"/chinatown\">Chinatown</NavDropdown.Item>\n        </NavDropdown>\n        </Nav>\n    </Navbar.Collapse>\n    </Container>\n    </Navbar>\n  );\n}\nexport default NavigationBar;","import React from 'react';\nimport {Container} from 'react-bootstrap';\nimport './Homepage.css';\nimport Map from '../Map';\nimport NavigationBar from '../HPNavbar';\n\nfunction Homepage() {\nreturn (\n    <div>\n        <Container><NavigationBar /></Container>\n        <div className=\"block1\">\n            <div className=\"map-component\"><Map /></div>\n        </div>\n        <div className=\"title\"><h1> Homepage </h1> </div>\n            <div className=\"generalinfo\"> \n                <p>Total number of businesses for all main streets: XXX </p> \n                <p>Estimated number of employees for all main streets: XXX </p>\n                <p>Average employment size for all main street businesses: XXX </p>\n            </div>\n    </div>\n);\n}\n\nexport default Homepage;","import React from 'react';\nimport 'leaflet/dist/leaflet.css';\nimport markerIconPng from \"leaflet/dist/images/marker-icon.png\"\nimport {Icon} from 'leaflet'\nimport {MapContainer, TileLayer, GeoJSON, Marker, Popup} from 'react-leaflet';\nimport msdistricts from './Main_Street_Districts.json';\nimport './Map.css'\n\nfunction MainstreetMap(district_data, map_coor, map_zoom) {\n\n    const districtStyle = {\n      color: \"red\",\n      fillColor: \"red\",\n      fillOpacity: .4,\n    }\n\n    return (\n      <div>\n        <MapContainer\n          center={map_coor}\n          zoom={map_zoom}\n          scrollWheelZoom={false}>\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <GeoJSON style={districtStyle} data={msdistricts} />\n          {district_data.map((item) =>\n              <Marker position={item.geometry.coordinates} \n                      icon={new Icon({iconUrl: markerIconPng, iconSize: [20, 35]})}>\n                  <Popup> This is the business: {item.properties.name} </Popup>\n              </Marker>\n           )}\n        </MapContainer>\n      </div>\n    );\n  }\n\nexport default MainstreetMap;","import React from 'react';\nimport {Nav, Container, NavDropdown, Navbar} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction NavigationBar(busi_link, employ_link, spend_link) {\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n    <Container>\n    <Navbar.Brand href=\"/\">Homepage</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"me-auto\">\n        <NavDropdown title=\"Mainstreets\" id=\"basic-nav-dropdown\">\n            <NavDropdown.Item href=\"/brighton\">Brighton</NavDropdown.Item>\n            <NavDropdown.Item href=\"/chinatown\">Chinatown</NavDropdown.Item>\n        </NavDropdown>\n        <Nav.Link href={busi_link}>Business</Nav.Link>\n        <Nav.Link href={employ_link}>Employment</Nav.Link>\n        <Nav.Link href={spend_link}>Mobility and Spending</Nav.Link>\n        </Nav>\n    </Navbar.Collapse>\n    </Container>\n    </Navbar>\n  );\n}\nexport default NavigationBar;","import React from 'react';\nimport MainstreetMap from '../MainstreetMap';\nimport NavigationBar from '../MSNavbar';\nimport './Layout.css'\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip} from \"recharts\";\nimport {Container} from 'react-bootstrap';\n\nconst msname = \"Brighton\";\n\nfunction BusinessData() { \n    const [business_data, setData] = React.useState([]);\n    const [industry_graph, setGraph1] = React.useState([]);\n    React.useEffect(() => {\n        fetch('http://35.168.164.33:5000/brighton')\n        .then(response => response.json())\n        .then(data => {\n            setData(data.geo.features)\n            setGraph1(data.industry_graph.data)\n\n        })\n        .catch(error => console.log(error));\n    }, {});\n    \n    return ([MainstreetMap(business_data, [42.35, -71.16], 15), industry_graph]);\n}\n\nfunction Brighton() {\n    const DistrictBar = () => {\n       return NavigationBar(\"/brighton\", \"/brighton/employment\", \"/brighton/spending\");\n    }\n    const business = BusinessData();\n    return (\n        <div>\n            <Container><DistrictBar /></Container>\n            <div className=\"map\"> {business[0]} </div>\n            <div className=\"street\"> <h2>{msname} Main Street </h2> </div>\n            <div className=\"generalinfo\"> \n                <p>Total number of businesses: XXX </p> \n                <p>Estimated number of employees: XXX </p>\n                <p>Average employment size: XXX </p>\n            </div>\n            <div className=\"graph1title\"><h5>Industrial Distribution of Businesses in {msname}</h5></div>\n            <div className=\"graph1\">\n                <BarChart\n                    width={600}\n                    height={200}\n                    data={business[1]}\n                    barGap={2}\n                    layout=\"vertical\"\n                    barCategoryGap=\"20%\"\n                    margin={{\n                        top: 5,\n                        right: 30,\n                        left: 20,\n                        bottom: 5\n                    }}\n                    >\n                    <CartesianGrid strokeDasharray=\"3 3\"/>\n                    <XAxis type=\"number\"/>\n                    <YAxis type=\"category\" tick={{fontSize: 7}} width={300} dataKey=\"industry\"/>\n                    <Tooltip />\n                    <Bar dataKey=\"business_num\" fill=\"blue\" />\n                </BarChart>\n            </div>\n        </div>\n    );\n}\n\nexport default Brighton;","import React from 'react';\nimport MainstreetMap from '../MainstreetMap';\nimport NavigationBar from '../MSNavbar';\nimport './Layout.css'\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip} from \"recharts\";\nimport {Container} from 'react-bootstrap'; \n\nconst msname = \"Chinatown\";\n\nfunction BusinessData() { \n    const [business_data, setData] = React.useState([]);\n    const [industry_graph, setGraph1] = React.useState([]);\n    React.useEffect(() => {\n        fetch('http://35.168.164.33:5000/chinatown')\n        .then(response => response.json())\n        .then(data => {\n            setData(data.geo.features)\n            setGraph1(data.industry_graph.data)\n\n        })\n        .catch(error => console.log(error));\n    }, {});\n    \n    return ([MainstreetMap(business_data, [42.3515, -71.061], 17), industry_graph]);\n}\n\nfunction Chinatown() {\n    const DistrictBar = () => {\n        return NavigationBar(\"/chinatown\", \"/chinatown/employment\", \"/chinatown/spending\");\n     }\n    const business = BusinessData();\n    return (\n        <div>\n            <Container><DistrictBar /></Container>\n            <div className=\"map\"> {business[0]} </div>\n            <div className=\"street\"> <h2>{msname} Main Street </h2> </div>\n            <div className=\"generalinfo\"> \n                <p>Total number of businesses: XXX </p> \n                <p>Estimated number of employees: XXX </p>\n                <p>Average employment size: XXX </p>\n            \n            </div>\n            <div className=\"graph1title\"><h5>Industrial Distribution of Businesses in {msname}</h5></div>\n            <div className=\"graph1\">\n            <BarChart\n                    width={600}\n                    height={200}\n                    data={business[1]}\n                    barGap={2}\n                    layout=\"vertical\"\n                    barCategoryGap=\"20%\"\n                    margin={{\n                        top: 5,\n                        right: 30,\n                        left: 20,\n                        bottom: 5\n                    }}\n                    >\n                    <CartesianGrid strokeDasharray=\"3 3\"/>\n                    <XAxis type=\"number\"/>\n                    <YAxis type=\"category\" tick={{fontSize: 7}} width={300} dataKey=\"industry\"/>\n                    <Tooltip />\n                    <Bar dataKey=\"business_num\" fill=\"blue\" />\n                </BarChart>\n            </div>\n        </div>\n    );\n}\n\nexport default Chinatown;","import Homepage from \"./Components/Pages/Hompage\";\nimport Brighton from \"./Components/Pages/Brighton\";\nimport Chinatown from \"./Components/Pages/Chinatown\";\nimport { BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\nimport React from 'react';\n\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <br />\n        <Routes>\n            <Route path='/' element={<Homepage/>} />\n            <Route path='/brighton' element={<Brighton/>} />\n            <Route path='/chinatown' element={<Chinatown/>} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}